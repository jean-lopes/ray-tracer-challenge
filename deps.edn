{:paths ["src"]

 :deps {org.clojure/clojure {:mvn/version "1.11.1"}}

 :aliases {;; TODO move this to a global deps.edn
           :src/java17 {:extra-deps {openjdk/java-sources {:local/root "/nix/store/2z1h7m8s4gvg5d3h6q7h1q8jlhqslir0-openjdk-17.0.4+8/lib/openjdk/lib/src.zip"}}}

           ;; TODO move this to a global deps.edn
           :src/clojure {:extra-deps {org.clojure/source {:local/root "/home/jean-lopes/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar"}}}

           :dev {:extra-paths ["dev"]
                 :extra-deps  {org.clojure/tools.namespace {:mvn/version "1.3.0"}
                               org.clojure/java.classpath  {:mvn/version "1.0.0"}
                               org.clojure/java.data       {:mvn/version "1.0.95"}}}

           :test {:extra-paths ["test"]
                  :extra-deps  {org.clojure/test.check               {:mvn/version "1.1.0"}
                                io.github.cognitect-labs/test-runner {:git/tag "v0.5.1" :git/sha "dfb30dd"}}
                  :main-opts   ["-m" "cognitect.test-runner"]
                  :exec-fn     cognitect.test-runner.api/test}

           ;; TODO move this to a global deps.edn
           :format {:extra-deps {cljfmt/cljfmt {:mvn/version "0.9.0"}}
                    :main-opts  ["-m" "cljfmt.main"
                                 ;;"--indents" "indentation.edn"
                                 "fix" "src" "dev" "test"]}

           ;; TODO move this to a global deps.edn
           :lint {:extra-deps {clj-kondo/clj-kondo {:mvn/version "2022.10.14"}}
                  :main-opts  ["-m" "clj-kondo.main" "--lint" "src:dev:test"]}

           ;; TODO move this to a global deps.edn
           :coverage {:extra-paths ["test"]
                      :extra-deps  {cloverage/cloverage {:mvn/version "1.2.4"}}
                      :main-opts   ["-m" "cloverage.coverage" "--src-ns-path" "src" "--test-ns-path" "test"]}

           ;; TODO move this to a global deps.edn
           :inspect/reveal {:extra-deps {vlaaad/reveal {:mvn/version "1.3.276"}}
                            :exec-fn    vlaaad.reveal/repl
                            :main-opts  ["-m" "vlaaad.reveal" "repl"]}

           ;; TODO move this to a global deps.edn
           :lib/sayid {:extra-deps {com.billpiel/sayid {:mvn/version "0.1.0"}}}

           ;; TODO move this to a global deps.edn
           ;; Cloverage - Simple clojure coverage tool
           ;; https://github.com/cloverage/cloverage
           ;; In the root of your Clojure project, run the command:
           ;; clojure -M:test/coverage
           ;; clojure -X:test/coverage
           :test/cloverage {:extra-paths ["test"]
                            :extra-deps  {org.clojure/test.check {:mvn/version "1.1.0"}
                                          cloverage/cloverage    {:mvn/version "1.2.4"}}
                            :main-opts   ["-m" "cloverage.coverage"
                                          "--src-ns-path" "src"
                                          "--test-ns-path" "test"]
                            :exec-fn     cloverage.coverage/run-project
                            :exec-args   {:src-ns-path  ["src"]
                                          :test-ns-path ["test"]}}

           ;; TODO move this to a global deps.edn
           ;; clj-kondo - comprehensive and fast linter
           ;; https://github.com/borkdude/clj-kondo/
           :lint/clj-kondo {:extra-deps {clj-kondo/clj-kondo {:mvn/version "2022.10.14"}}
                            :main-opts  ["-m" "clj-kondo.main" "--lint" "src"]}

           ;; TODO move this to a global deps.edn
           ;; Eastwood - lint tool based on tools.analyzer.jvm
           :lint/eastwood {:extra-deps {jonase/eastwood {:mvn/version "1.3.0"}}
                           ;; Eastwood accurately infers source/test paths, so they are best left unspecified:
                           :main-opts  ["-m" "eastwood.lint"]}

           ;; TODO move this to a global deps.edn
           ;; kibit - suggest idiomatic use of Clojure
           ;; https://github.com/jonase/kibit/issues/221
           :lint/idiom {:replace-paths []
                        :replace-deps  {tvaughan/kibit-runner {:mvn/version "1.0.1"}}
                        :main-opts     ["-m" "kibit-runner.cmdline"]}

           ;; ---------------------------------------------------
           ;; Visualizing dependencies

           ;; TODO move this to a global deps.edn
           ;; Morpheus - visualize project var relationships
           ;; https://github.com/benedekfazekas/morpheus
           ;; Options:
           ;; -d to specify output directory (this must exist)
           ;; -f to specify image format, dot (default), png or svg
           ;; Options are followed by list of paths to analyze.
           ;; clojure -M:graph/vars -d graphs -f png src test
           :graph/vars {:extra-deps {thomasa/morpheus
                                     {:git/url "https://github.com/benedekfazekas/morpheus.git"
                                      :sha     "6d7d8ccc1dd58ef2d4d9c781486303cf1082b899"}}
                        :main-opts  ["-m" "thomasa.morpheus.main"]}

           ;; TODO move this to a global deps.edn
           ;; Generate PNG image of dependency graph in directory called `graphs`
           ;; clojure -M:graph/vars-png
           :graph/vars-png {:extra-deps {thomasa/morpheus
                                         {:git/url "https://github.com/benedekfazekas/morpheus.git"
                                          :sha     "6d7d8ccc1dd58ef2d4d9c781486303cf1082b899"}}
                            :main-opts  ["-m" "thomasa.morpheus.main"
                                         "-d" "graphs" "-f" "png" "src" "test"]}

           ;; TODO move this to a global deps.edn
           ;; Generate SVG image of dependency graph in directory called `graphs`
           ;; clojure -M:graph/vars-svg
           :graph/vars-svg {:extra-deps {thomasa/morpheus
                                         {:git/url "https://github.com/benedekfazekas/morpheus.git"
                                          :sha     "6d7d8ccc1dd58ef2d4d9c781486303cf1082b899"}}
                            :main-opts  ["-m" "thomasa.morpheus.main"
                                         "-d"  "graphs" "-f" "svg" "src"]}

           ;; TODO move this to a global deps.edn
           ;; Visualize connections between library dependencies and project namespaces
           ;; https://github.com/SevereOverfl0w/vizns
           ;; clojure -M:graph/ns-deps
           :graph/ns-deps {:extra-deps {io.dominic/vizns {:git/url "https://github.com/SevereOverfl0w/vizns.git"
                                                          :sha     "69774e8c29e1c1c691f9922d5c5a6d764374ada3"}}
                           :main-opts  ["-m" "io.dominic.vizns.core"]}

           ;; TODO move this to a global deps.edn
           ;; Generate single PNG image of library dependencies
           :graph/ns-deps-png {:extra-deps {io.dominic/vizns {:git/url "https://github.com/SevereOverfl0w/vizns.git"
                                                              :sha     "69774e8c29e1c1c691f9922d5c5a6d764374ada3"}}
                               :main-opts  ["-m" "io.dominic.vizns.core" "single" "-o" "deps-graph.png" "-f" "png"]}

           ;; TODO move this to a global deps.edn
           ;; GraphViz of project dependencies
           ;; https://github.com/clojure/tools.deps.graph
           ;; clojure -T:graph/deps
           :graph/deps {:replace-paths []
                        :replace-deps  {org.clojure/tools.deps.graph {:mvn/version "1.1.68"}}
                        :ns-default    clojure.tools.deps.graph
                        :exec-fn       graph
                        :exec-args     {:output "project-dependencies-graph.png"
                                        :size   true}}

           ;; TODO move this to a global deps.edn
           :performance {:extra-paths ["perf"]
                         :extra-deps {criterium/criterium {:mvn/version "0.4.6"}
                                      jmh-clojure/jmh-clojure {:mvn/version "0.4.1"}
                                      com.clojure-goes-fast/clj-memory-meter {:mvn/version "0.2.1"}}
                         :jvm-opts   ["-Djdk.attach.allowAttachSelf"]}

           :jmh {:extra-paths ["perf" "classes"]
                 :extra-deps {jmh-clojure/task {:mvn/version "0.1.1"}}
                 :ns-default jmh.task
                 :exec-fn jmh.task/run}

           ;; Portal
           ;; Navigate data - edn, json, transit
           ;; https://github.com/djblue/portal
           :inspect/portal-cli
           {:extra-deps {djblue/portal {:mvn/version "0.30.0"}}}

           :inspect/portal-web
           {:extra-deps {djblue/portal             {:mvn/version "0.30.0"}
                         org.clojure/clojurescript {:mvn/version "1.10.844"}}
            :main-opts  ["-m" "cljs.main"]}

           :inspect/portal-node
           {:extra-deps {djblue/portal             {:mvn/version "0.30.0"}
                         org.clojure/clojurescript {:mvn/version "1.10.844"}}
            :main-opts  ["-m" "cljs.main" "-re" "node"]}

           ;; clojure -M:repl/rebel
           :repl/rebel
           {:extra-deps {nrepl/nrepl                {:mvn/version "1.0.0"}
                         cider/cider-nrepl          {:mvn/version "0.28.5"}
                         com.bhauman/rebel-readline {:mvn/version "0.1.4"}}
            :main-opts  ["-m" "nrepl.cmdline"
                         "--middleware" "[cider.nrepl/cider-middleware]"
                         "--interactive"
                         "-f" "rebel-readline.main/-main"]}

           ;; TODO move this to a global deps.edn
           :nrepl {:extra-deps {nrepl/nrepl                   {:mvn/version "1.0.0"}
                                cider/cider-nrepl             {:mvn/version "0.28.5"}
                                refactor-nrepl/refactor-nrepl {:mvn/version "3.5.2"}
                                vlaaad/reveal                 {:mvn/version "1.3.275"}}
                   :jvm-opts   ["--add-opens" "javafx.graphics/com.sun.javafx.tk=ALL-UNNAMED"
                                "-Dvlaaad.reveal.prefs={:theme,:light,:font-family,\"https://ff.static.1001fonts.net/u/b/ubuntu.mono.ttf\",:font-size,32}"]
                   :main-opts  ["-m" "nrepl.cmdline" "--middleware" "[vlaaad.reveal.nrepl/middleware,refactor-nrepl.middleware/wrap-refactor,cider.nrepl/cider-middleware]"]}}}
